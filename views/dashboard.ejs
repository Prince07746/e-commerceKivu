<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Dashboard</title>
    <link rel="stylesheet" href="/node_modules/bootstrap/dist/css/bootstrap.min.css">
    <link href='https://cdn.jsdelivr.net/npm/boxicons@2.0.5/css/boxicons.min.css' rel='stylesheet'>

    <script src="/external/bootstrap.bundle.js"></script>
    <script src="/javascript/comon1.js"></script>

    <link rel="stylesheet" href="/external/bootstrap.css">
    <link href='/boxicons/css/boxicons.min.css' rel='stylesheet'>
    <link rel="stylesheet" href="/css/style.css">

    <style>
        .editable {
            cursor: pointer;
            display: inline-block;
            border-bottom: 1px dashed #007bff;
        }
        .edit-input {
            display: none;
        }
        .cart-item {
            display: flex;
            align-items: center;
            margin-bottom: 1rem;
        }
        .cart-item img {
            margin-right: 1rem;
        }
        .cart-item-details {
            flex-grow: 1;
        }
        .cart-item p {
            margin: 0.5rem 0;
        }
        .cart-item .btn {
            margin-right: 0.5rem;
        }
    </style>
</head>
<body>

    <nav class="navbar navbar-expand-lg navbar-dark" id="navbar-main" style="background-color: black;">
        <a class="navbar-brand" href="/">
          <img src="/images/logo3.png" alt="Bootstrap" width="140" height="145">
        </a>
    
        <button class="navbar-toggler" type="button" id="button-menu" >
          <span class="navbar-toggler-icon" id="icon-m"></span>
          
        </button>
    
    
    
        <div id="utilisateur-item">
            <a href="/panier" type="button" class="btn btn-primary btn-sm position-relative">
                <i class='bx bx-cart-add' ></i>
                <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">
                  <span><%= panier %></span>
                </span>
            </a>
        
            <a href="/<%= log1Info %>" id="utilisateur"><i class='<%= logInfo %>'></i></a>
            </div>
    
      </nav>
    
      <section class="menu-bar" id="menu-bar">
        <a href="/item/classifier/Immobilier">
          <ul>
            <li><i class='bx bxs-institution'></i></li>
            <li>Immobilier</li>
          </ul>
        </a>
        <a href="/item/classifier/Meuble">
          <ul>
            <li><i class='bx bxs-fridge'></i></li>
            <li>Meuble</li>
          </ul>
        </a>
        <a href="/item/classifier/Apareile">
          <ul>
            <li><i class='bx bx-tv'></i></li>
            <li>Apareille</li>
          </ul>
        </a>
        <a href="/moi">
          <ul>
            <li><i class='bx bx-user-circle'></i></li>
            <li>Mon compte</li>
          </ul>
        </a>
        <a href="/panier">
            <ul>
              <li><i class='bx bx-cart-add' ></i></li>
              <li>Pagner <span class="badge text-bg-danger" style="color: white; background-color:#e13a0d;"><%= panier %></span></li>
              
            </ul>
          </a>
          <a href="/<%= log1Info %>">
            <ul>
              <li class='<%= logInfo %>' style="font-size: 30px; margin-bottom: 10px"></li>
            </ul>
          </a>
      
    
      </section>
    
    
    <nav id="navigation-bar-phone">
    
    <div id="phone-nav" class="ph">
      <a href="/item/classifier/Immobilier">Immobilier</a>
      <i class='bx bxs-institution'></i>
    </div>
    <div id="phone-nav" class="ph">
      <a href="/item/classifier/Meuble">meuble</a>
      <i class='bx bxs-fridge'></i>
    </div>
    <div id="phone-nav" type="button" class="btn btn-primary menu-principal" data-toggle="modal" data-target="#unique-menuModal">
      <a >Menu</a>
      <i class='bx bx-plus'></i>
    </div>
    <div id="phone-nav" class="ph">
      <a href="/item/classifier/Apareile">Apareille</a>
      <i class='bx bx-tv'></i>
    </div>
    <div id="phone-nav" class="ph">
      <a href="/moi"><b>Moi</b></a>
      <i class='bx bx-user-circle'></i>
    </div>
    
    </nav>
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    <section class="main-intro">
      <center>
        <h3>Retrouve tout </h3>
        <p>En un seul clic et voilà ton rêve</p>
        <div class="search-data">
          <i class="bx bx-search"></i>
          <input id="searchInput" type="text" placeholder="Design, code, mar...">
          <button id="searchBtn" class="btn btn-info">Rechercher</button>
        </div>
      </center>
    </section>
    
    <style>
      .bar-de-resultat {
        margin-left: 20%;
        margin-right: 10%;
        width: 70%;
        height: 400px;
        overflow: scroll;
        top: 25vh;
        left: 10vh;
        min-height: 50px;
        background-color: white;
        border-radius: 20px;
        border: none;
        z-index: 999;
        display: none;
        padding: 10px;
        box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
      }
    </style>
    
    <div class="bar-de-resultat" id="results"></div>
    
    <script>
      const searchInput = document.getElementById('searchInput');
      const searchBtn = document.getElementById('searchBtn');
      const resultsDiv = document.getElementById('results');
      let debounceTimeout;
    
      searchBtn.addEventListener('click', function() {
        search();
      });
    
      searchInput.addEventListener('input', function() {
        clearTimeout(debounceTimeout);
        debounceTimeout = setTimeout(function() {
          search();
        }, 300);
      });
    
      async function search() {
        const query = searchInput.value.trim();
        if (query.length > 0) {
          // Display loading spinner
          resultsDiv.innerHTML = '<div class="spinner-border text-primary" role="status"><span class="sr-only">Loading...</span></div>';
    
          // Simulate a request delay
          setTimeout(async function() {
            // Fetch search results (replace with your actual fetch logic)
            const results = await fetchSearchResults(query);
    
            // Display results
            displayResults(results);
          }, 1000); // Simulated delay of 1 second
        } else {
          // Clear results if query is empty
          resultsDiv.innerHTML = '';
          resultsDiv.style.display = 'none';
        }
      }
    
      async function fetchSearchResults(query) {
        // Replace this with your actual fetch logic
        // For example, fetch data from server
        const response = await fetch('/search', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ query })
        });
        const data = await response.json();
        return data;
      }
    
      function displayResults(results) {
        const resultsDiv = document.getElementById('results');
    
        if (results.length === 0) {
          resultsDiv.innerHTML = '<p class="text-center">Pas de résultats trouvés.</p>';
        } else {
          const ul = document.createElement('ul');
          ul.classList.add('list-group', 'mb-3', 'd-flex', 'flex-wrap');
    
          results.forEach(result => {
            const li = document.createElement('li');
            li.classList.add('list-group-item', 'mb-3', 'border-0', 'shadow-sm', 'rounded', 'w-20');
            li.style.background = 'white'; // Background color
            li.innerHTML = `
              <h6 class="mb-1" style="font-size: 12px">${result.nom}</h6>
              <p class="mb-1" style="font-size: 10px">Prix: ${result.prix}</p>
              <p class="mb-1" style="font-size: 10px">Origine: ${result.origine}</p>
              <a href="/item/${result.id}" class="btn btn-primary btn-sm">Voir plus</a>
            `;
            ul.appendChild(li);
          });
    
          resultsDiv.innerHTML = ''; // Clear previous results
          resultsDiv.appendChild(ul);
        }
    
        resultsDiv.style.display = 'block'; // Display the results container
      }
    </script>
    
    
    
    




    <div class="container mt-5">
        <h1 class="mb-4">User Dashboard</h1>
        <div class="row">
            <div class="col-md-4">
                <div class="card">
                    <div class="card-header">
                        <h3><i class='bx bx-user-circle'></i> Profile</h3>
                    </div>
                    <div class="card-body">
                        <p><strong>Name:</strong> <span class="editable" data-edit="name"><%= user.NomUtilisateur %></span></p>
                        <p><strong>Email:</strong> <span class="editable" data-edit="email"><%= user.Email %></span></p>
                        <p><strong>Phone:</strong> <span class="editable" data-edit="phone"><%= user.Téléphone %></span></p>
                        <p>
                            <button class="btn btn-primary" id="edit-profile">Edit Profile</button>
                            <button class="btn btn-success edit-input" id="save-profile">Save</button>
                        </p>
                    </div>
                </div>
            </div>
            <div class="col-md-8">
                <div class="card">
                    <div class="card-header">
                        <h3><i class='bx bx-cart'></i> Cart</h3>
                    </div>
                    <div class="card-body">
                        <% cartItems.forEach(item => { %>
                            <div class="cart-item mb-3">
                                <img src="/<%= item.img_id %>/<%= item.img1 %>" alt="<%= item.nom %>" class="img-thumbnail" style="width: 100px;">
                                <div class="cart-item-details">
                                    <h4><%= item.nom %></h4>
                                    <p>Price: $<span class="item-price"><%= item.prix %></span></p>
                                    <p>Quantity: <input type="number" class="form-control item-quantity" value="<%= item.quantite %>" min="1" data-id="<%= item.id %>"></p>
                                    <p>Total: $<span class="item-total-price"><%= item.prix * item.quantite %></span></p>
                                    <button class="btn btn-danger remove-item" data-id="<%= item.id %>">Remove</button>
                                    <button class="btn btn-primary contact-seller" data-link="<%= item.lien %>">Contact Seller</button>
                                </div>
                            </div>
                        <% }) %>
                        <div class="text-right">
                            <button class="btn btn-success" id="checkout">Checkout</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <hr>
    <center>
        <i>@In collaboration with Matongo prince</i>
    </center>
    <hr>

    <script>
        document.addEventListener('DOMContentLoaded', (event) => {
            // Enable editing
            document.getElementById('edit-profile').addEventListener('click', () => {
                document.querySelectorAll('.editable').forEach((element) => {
                    const field = element.dataset.edit;
                    const input = document.createElement('input');
                    input.type = 'text';
                    input.classList.add('form-control', 'edit-input');
                    input.value = element.innerText;
                    input.dataset.edit = field;
                    element.parentNode.replaceChild(input, element);
                });
                document.getElementById('edit-profile').style.display = 'none';
                document.getElementById('save-profile').style.display = 'block';
            });

            // Save profile changes
            document.getElementById('save-profile').addEventListener('click', async () => {
                const updatedData = {};
                document.querySelectorAll('.edit-input').forEach((input) => {
                    updatedData[input.dataset.edit] = input.value;
                });

                const response = await fetch('/update-profile', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(updatedData),
                });

                const result = await response.json();
                if (result.success) {
                    location.reload();
                } else {
                    alert('Failed to update profile');
                }
            });

            // Handle cart quantity change
            document.querySelectorAll('.item-quantity').forEach((input) => {
                input.addEventListener('change', async (event) => {
                    const id = event.target.dataset.id;
                    const quantity = event.target.value;
                    const price = parseFloat(event.target.closest('.cart-item').querySelector('.item-price').innerText);
                    const totalPrice = price * quantity;
                    event.target.closest('.cart-item').querySelector('.item-total-price').innerText = totalPrice.toFixed(2);

                    await fetch('/update-cart', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ id, quantity }),
                    });
                });
            });

            // Remove item from cart
            document.querySelectorAll('.remove-item').forEach((button) => {
                button.addEventListener('click', async (event) => {
                    const id = event.target.dataset.id;

                    const response = await fetch('/remove-from-cart', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ id }),
                    });

                    const result = await response.json();
                    if (result.success) {
                        location.reload();
                    } else {
                        alert('Failed to remove item');
                    }
                });
            });

            // Contact seller
            document.querySelectorAll('.contact-seller').forEach((button) => {
                button.addEventListener('click', (event) => {
                    const link = event.target.dataset.link;
                    window.open(link, '_blank');
                });
            });

            // Handle checkout
            document.getElementById('checkout').addEventListener('click', () => {
                alert('Proceeding to checkout...');
            });
        });
    </script>
</body>
</html>
